+-------------------------------------------------------------------+
|                                                                   |
|                         POST INSTALLATION                         |
|                                                                   |
| * Hello new KISS user. I hope the installation went well. Did you |
|   run into any issues? I sure did my first time. We've all been   |
|   there.                                                          |
|                                                                   |
| * The installation guide merely covers.. well.. the installation. |
|   You're probably wondering how to get your WiFi working and what |
|   not.                                                            |
|                                                                   |
| * Fear not my friend. This page will cover everything from        |
|   timezones to system optimization. The TTY abyss just got a      |
|   little bit brighter.                                            |
|                                                                   |
+-------------------------------------------------------------------+


+-------------------------------------------------------------------+
|                                                                   |
|                           DATE AND TIME                           |
|                                                                   |
+-------------------------------------------------------------------+

* Setting the time zone.

  The system time zone can be set via the 'tzdata' package. This
  installs the time zone database and once your timezone is set,
  can be removed from the system.

  The 'tzdata' package sees periodic updates to reflect political
  changes to time zones, daylight savings and UTC offsets.

  The source code is a goldmine of historical information and is
  well worth the read. https://github.com/eggert/tz

  # Install the tzdata package.
  $ kiss b tzdata && kiss i tzdata

  # Link your desired timezone to /etc/localtime.
  $ cp -f /usr/share/zoneinfo/Europe/Rome /etc/localtime

  # Optional: Remove the tzdata package.
  $ kiss r tzdata


+-------------------------------------------------------------------+
|                                                                   |
|                              SOUND                                |
|                                                                   |
+-------------------------------------------------------------------+

* Setting up audio (ALSA).

  The system's volume is muted by default and is a common cause of
  "My sound doesn't work". In most cases, the only setup ALSA needs
  is a simple unmute of the Master volume.

  # Unmute the audio.
  $ amixer sset Master unmute

  If the system still has no audio, have a look at your soundcard(s).
  Is the right one the default? Another common issue is the default
  device being set to a virtual HDMI/HD audio output.

  If sound only works as root, your user is most likely not in the
  audio group. A logout/login (or a reboot) is needed for the changes
  to take affect.

  # Add USERNAME to the audio group.
  $ addgroup USERNAME audio

  For further troubleshooting, refer to the Arch Linux Wiki. It's a
  great resource for audio related issues.

  <a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture/Troubleshooting">ALSA/Troubleshooting</a>

+-------------------------------------------------------------------+
|                                                                   |
|                               TTY                                 |
|                                                                   |
+-------------------------------------------------------------------+

* Auto login to TTY.

  There are multiple avenues for enabling auto login to the TTY.

  The default 'getty' implementation has no support for bypassing
  login. This leaves one solution which works without the use of
  additional software.

  In your '/etc/inittab', instead of spawning a getty on a TTY, one
  can spawn 'login -f' with the desired username. This can be
  undesirable as the getty is removed from the equation.

  If a getty of some kind must remain, 'agetty' (from util-linux)
  can be used in place of regular 'getty'. This getty implementation
  has support for auto-login.

  # The default getty (with password login).
  tty1::respawn:/bin/getty 38400 tty2

  # Bypass login by skipping the getty (via 'login -f').
  tty1::respawn:/bin/login -f dylan

  # Bypass login by using agetty.
  tty1::respawn:/bin/agetty --autologin user --noclear %I 38400 linux


* Keeping service output out of TTY1.

  This issue can be solved by simply staggering the TTYs in your
  /etc/inittab. The following is an example configuration which is
  free of the aforementioned issue.

  tty1::respawn:/bin/getty 38400 tty2
  tty2::respawn:/bin/getty 38400 tty3
  tty3::respawn:/bin/getty 38400 tty4
  tty4::respawn:/bin/getty 38400 tty5
  tty5::respawn:/bin/getty 38400 tty6

  NOTE: Future installations of KISS using busybox runit will not
        have this issue. A fix will be available in the next release
        of 'baseinit'.


+-------------------------------------------------------------------+
|                                                                   |
|                              XORG                                 |
|                                                                   |
+-------------------------------------------------------------------+

* Starting Xorg without xinit (ie, startx).

A little known fact about the 'startx' utility is that it's merely
a sample script. System administrators are strongly urged to write
their own. To quote the source:

> This is just a sample implementation of a slightly less primitive
> interface than xinit. [...] Site administrators are STRONGLY urged
> to write nicer versions.

Various alternative implementations of 'xinit'/'startx' exist and
can be used as more or less drop-in replacements to xinit.

- https://github.com/Earnestly/sx (support for xauth)

The absolute bare minimum (without support for xauth) is something
along these lines:

    #!/bin/sh

    xinitrc() {
       export DISPLAY=:0

       exec sowm
    }

    trap xinitrc USR1

    (trap '' USR1; X -nolisten tcp :0 vt1 -quiet) &

    wait


Or alternatively:

    #!/bin/sh
    ( exec X -keeptty :0 vt1 ;) &
    DISPLAY=:0 "$HOME/.xinitrc"
    wait
